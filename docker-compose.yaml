# services:
#   airflow-init:
#     build: .
#     container_name: airflow-init
#     entrypoint: >
#       /bin/bash -c "
#       airflow db init &&
#       airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
#       "
#     environment:
#       AIRFLOW__CORE__EXECUTOR: SequentialExecutor
#       AIRFLOW__CORE__FERNET_KEY: lG_GaIuKU3AROf9gQvsrVMuM1cbYt3o9wDcsQRHNikw=
#       AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
#       AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080
#       PYTHONPATH: /opt/airflow
#     volumes:
#       - ./airflow:/opt/airflow
#       - ./src:/opt/airflow/src
#       - ./airflow/dags:/opt/airflow/dags
#       - ./airflow/data:/opt/airflow/data
#       - ./airflow/artifacts:/opt/airflow/artifacts
#       - airflow_db:/opt/airflow

#   airflow-webserver:
#     build: .
#     container_name: airflow-webserver
#     restart: always
#     depends_on:
#       - airflow-init
#     environment:
#       AIRFLOW__CORE__EXECUTOR: SequentialExecutor
#       AIRFLOW__CORE__FERNET_KEY: lG_GaIuKU3AROf9gQvsrVMuM1cbYt3o9wDcsQRHNikw=
#       AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
#       AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080
#       PYTHONPATH: /opt/airflow
#     ports:
#       - "8080:8080"
#     command: airflow webserver
#     volumes:
#       - ./airflow:/opt/airflow
#       - ./src:/opt/airflow/src
#       - ./airflow/dags:/opt/airflow/dags
#       - ./airflow/data:/opt/airflow/data
#       - ./airflow/artifacts:/opt/airflow/artifacts
#       - airflow_db:/opt/airflow

#   airflow-scheduler:
#     build: .
#     container_name: airflow-scheduler
#     restart: always
#     depends_on:
#       - airflow-init
#     environment:
#       AIRFLOW__CORE__EXECUTOR: SequentialExecutor
#       AIRFLOW__CORE__FERNET_KEY: lG_GaIuKU3AROf9gQvsrVMuM1cbYt3o9wDcsQRHNikw=
#       AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
#       PYTHONPATH: /opt/airflow
#     command: airflow scheduler
#     volumes:
#       - ./airflow:/opt/airflow
#       - ./src:/opt/airflow/src
#       - ./airflow/dags:/opt/airflow/dags
#       - ./airflow/data:/opt/airflow/data
#       - ./airflow/artifacts:/opt/airflow/artifacts
#       - airflow_db:/opt/airflow

# volumes:
#   airflow_db:

services:
  airflow-init:
    build: .
    container_name: airflow-init
    entrypoint: >
      /bin/bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__FERNET_KEY: lG_GaIuKU3AROf9gQvsrVMuM1cbYt3o9wDcsQRHNikw=
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      PYTHONPATH: /opt/airflow:/opt/airflow/src
    volumes:
      - ./airflow:/opt/airflow
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data


  airflow-webserver:
    build: .
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__FERNET_KEY: lG_GaIuKU3AROf9gQvsrVMuM1cbYt3o9wDcsQRHNikw=
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      PYTHONPATH: /opt/airflow:/opt/airflow/src

    ports:
      - "8080:8080"
    command: airflow webserver
    volumes:
      - ./airflow:/opt/airflow
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data


  airflow-scheduler:
    build: .
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__FERNET_KEY: lG_GaIuKU3AROf9gQvsrVMuM1cbYt3o9wDcsQRHNikw=
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
      PYTHONPATH: /opt/airflow:/opt/airflow/src
    command: airflow scheduler
    volumes:
      - ./airflow:/opt/airflow
      - ./src:/opt/airflow/src
      - ./data:/opt/airflow/data


volumes:
  airflow_db:
